#include "instruction.h"
#include "registers.h"

If prefix_bkp ≥ prefix_ixbits:Then
  get_byte(reg_pc)→temp_var
  wrap24(reg_pc + 1)→reg_pc
End

get_byte(reg_pc)

// Split the instruction into its components (http://www.z80.info/decoding.htm)
{Ans, prefix_bkp, int(Ans / 64), remainder(int(Ans / 8), 8), remainder(Ans, 8)}
augment(Ans,{int(Ans(4) / 2), remainder(Ans(4), 2)})→inst_part_list

If prefix_bkp ≥ prefix_ixbits
  temp_var→inst_immediate

no_prefix→prefix_bkp
If in(inst_prefix,({no_prefix,prefix_ix,prefix_iy})):Then
#include "instructions/no_prefix.pbasic"
Else
  If inst_prefix=prefix_bits:Then
#include "instructions/bits.pbasic"
  End
End

wrap24(reg_pc + 1)→reg_pc
